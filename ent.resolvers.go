package gigachad

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"

	"github.com/sahidrahman404/gigachad-api/ent"
)

// Node is the resolver for the node field.
func (r *queryResolver) Node(ctx context.Context, id string) (ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Node - node"))
}

// Nodes is the resolver for the nodes field.
func (r *queryResolver) Nodes(ctx context.Context, ids []string) ([]ent.Noder, error) {
	panic(fmt.Errorf("not implemented: Nodes - nodes"))
}

// Sets is the resolver for the sets field.
func (r *routineExerciseResolver) Sets(ctx context.Context, obj *ent.RoutineExercise) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Sets - sets"))
}

// Sets is the resolver for the sets field.
func (r *workoutLogResolver) Sets(ctx context.Context, obj *ent.WorkoutLog) (map[string]interface{}, error) {
	panic(fmt.Errorf("not implemented: Sets - sets"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// RoutineExercise returns RoutineExerciseResolver implementation.
func (r *Resolver) RoutineExercise() RoutineExerciseResolver { return &routineExerciseResolver{r} }

// WorkoutLog returns WorkoutLogResolver implementation.
func (r *Resolver) WorkoutLog() WorkoutLogResolver { return &workoutLogResolver{r} }

type queryResolver struct{ *Resolver }
type routineExerciseResolver struct{ *Resolver }
type workoutLogResolver struct{ *Resolver }
